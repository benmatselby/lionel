// Code generated by MockGen. DO NOT EDIT.
// Source: trello/trello.go

// Package mock_trello is a generated GoMock package.
package mock_trello

import (
	reflect "reflect"

	trello "github.com/benmatselby/lionel/trello"
	gomock "github.com/golang/mock/gomock"
)

// MockAPI is a mock of API interface
type MockAPI struct {
	ctrl     *gomock.Controller
	recorder *MockAPIMockRecorder
}

// MockAPIMockRecorder is the mock recorder for MockAPI
type MockAPIMockRecorder struct {
	mock *MockAPI
}

// NewMockAPI creates a new mock instance
func NewMockAPI(ctrl *gomock.Controller) *MockAPI {
	mock := &MockAPI{ctrl: ctrl}
	mock.recorder = &MockAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockAPI) EXPECT() *MockAPIMockRecorder {
	return m.recorder
}

// GetBoard mocks base method
func (m *MockAPI) GetBoard(name string) (*trello.Board, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBoard", name)
	ret0, _ := ret[0].(*trello.Board)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBoard indicates an expected call of GetBoard
func (mr *MockAPIMockRecorder) GetBoard(name interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBoard", reflect.TypeOf((*MockAPI)(nil).GetBoard), name)
}

// GetBoards mocks base method
func (m *MockAPI) GetBoards() ([]trello.Board, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBoards")
	ret0, _ := ret[0].([]trello.Board)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBoards indicates an expected call of GetBoards
func (mr *MockAPIMockRecorder) GetBoards() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBoards", reflect.TypeOf((*MockAPI)(nil).GetBoards))
}

// GetCards mocks base method
func (m *MockAPI) GetCards(board trello.Board) ([]trello.Card, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCards", board)
	ret0, _ := ret[0].([]trello.Card)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCards indicates an expected call of GetCards
func (mr *MockAPIMockRecorder) GetCards(board interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCards", reflect.TypeOf((*MockAPI)(nil).GetCards), board)
}

// GetLists mocks base method
func (m *MockAPI) GetLists(board trello.Board) ([]trello.List, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLists", board)
	ret0, _ := ret[0].([]trello.List)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetLists indicates an expected call of GetLists
func (mr *MockAPIMockRecorder) GetLists(board interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLists", reflect.TypeOf((*MockAPI)(nil).GetLists), board)
}

// GetMember mocks base method
func (m *MockAPI) GetMember(ID string) (*trello.Member, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMember", ID)
	ret0, _ := ret[0].(*trello.Member)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetMember indicates an expected call of GetMember
func (mr *MockAPIMockRecorder) GetMember(ID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMember", reflect.TypeOf((*MockAPI)(nil).GetMember), ID)
}
